// There goes my sanity, thanks Discord :slight_smile:

@use 'sass:map' as *;

$status-mapping: (
  'dnd': (
    'fill-includes': '359',
    'aria-label': 'Do not disturb'
  ),
  'idle': (
    'fill-includes': '38',
    'aria-label': 'Idle'
  ),
  'online': (
    'fill-includes': '139',
    'aria-label': 'Online'
  ),
  'streaming': (
    'fill-includes': '262',
    'aria-label': 'Streaming'
  ),
  'offline': (
    'fill-includes': '214',
    'aria-label': 'Offline'
  )
);

:root {
  --kds-online-colour: var(--bsi-online-color, rgb(29, 185, 84));
  --kds-dnd-colour: var(--bsi-dnd-color, rgb(255, 42, 0));
  --kds-idle-colour: var(--bsi-idle-color, rgb(250, 166, 26));
  --kds-streaming-colour: var(--bsi-streaming-color, rgb(109, 20, 158));
  --kds-offline-colour: var(--bsi-offline-color, rgb(7, 134, 130));
  --kds-invisible-colour: var(--bsi-invisible-color, rgb(66, 65, 65));
}

// Regular and typing
@each $name, $inner-map in $status-mapping {
  rect {
    &[fill*='#{get($inner-map, 'fill-includes')}'] {
      // You ask: why the fuck are they doing this?
      // Well if I used normal interpolation it would add
      // spaces in between the --kds- prefix and $name
      fill: var(--kds- + $name + -colour);
    }
  }
}

// Status picker and DMs
@each $mask in keys($status-mapping) {
  foreignObject {
    &[mask*='#{$mask}'] {
      .status-1AY8sU {
        // This is to prevent this from happening when using Better Status Indicators
        // https://cdn.discordapp.com/attachments/666510091658330123/863683246632861716/unknown.png
        &:not([style*='rgb']) {
          // See above as to why I perform this monstrosity
          background-color: var(--kds- + $mask + -colour) !important;
        }
      }
    }
  }
}

// Speaking indicators
.avatar-SmRMf2 {
  @each $name, $inner-map in remove($status-mapping, 'offline') {
    &[aria-label$='#{get($inner-map, 'aria-label')}'] {
      --speaking-box-shadow-colour: #{var(--kds- + $name + -colour)};
    }
  }

  &[aria-label$='Invisible'] {
    // So it matches the icon
    --speaking-box-shadow-colour: var(--kds-invisible-colour);
  }

  .avatarSpeaking-2c8-9i {
    box-shadow: 0 0 0 2px var(--speaking-box-shadow-colour) inset,
                0 0 0 3px var(--background-secondary) inset;
  }
}

// Thanks to LuckFire for their original snippet + idea
// for DM status indicators!
.status-1XNdyw {
  &::after {
    font-weight: bold;
    text-transform: uppercase;
    padding-left: 8px;
    content: attr(aria-label);
  }

  @each $name, $inner-map in $status-mapping {
    &[aria-label='#{get($inner-map, 'aria-label')}'] {
      &::after {
        // :blobpain:
        color: var(--kds- + $name + -colour);
      }
    }
  }
}

// Much of the following code is heavily based upon code
// present in the RadialStatus repository by DiscordStyles
// provided under the MIT License
//
// https://github.com/DiscordStyles/RadialStatus/blob/master/src/RadialStatus.theme.scss#L49-L60
// https://github.com/DiscordStyles/RadialStatus/blob/master/src/RadialStatus.theme.scss#L65-L70
//
// Copyright (c) 2020 DiscordStyles

.wrapper-3t9DeA {
  &[data-bsi-radial-status='true'] {
    .dots-3Bkt3k {
      overflow: visible;

      circle {
        cy: -7.5;

        &:nth-child(1) {
          cx: -8.5;
        }

        &:nth-child(2) {
          cx: -2.25;
        }

        &:nth-child(3) {
          cx: 4;
        }
      }
    }

    foreignObject {
      &[mask*='typing'] {
        mask: none;

        .avatar-VxgULZ {
          border-radius: 50%; // Hacky
        }
      }
    }

    .pointerEvents-2zdfdO {
      &[mask='url(#svg-mask-status-typing)'] {
        x: 1;
        y: 1;
        width: 30px;
        height: 30px;
        fill: rgba(0, 0, 0, 0.75);
        clip-path: circle();
      }
    }
  }
}