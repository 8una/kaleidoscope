@use 'sass:map' as *;
@use 'sass:string' as str;

$status-mapping: (
  var(--kds-dnd-colour): (
    'hex': '#ed4245',
    'rgb': 'rgb(237, 66, 69)',
    'to-string': 'Do Not Disturb'
  ),
  var(--kds-idle-colour): (
    'hex': '#faa61a',
    'rgb': 'rgb(250, 166, 26)',
    'to-string': 'Idle'
  ),
  var(--kds-online-colour): (
    'hex': '#3ba55c',
    'rgb': 'rgb(59, 165, 92)',
    'to-string': 'Online'
  ),
  var(--kds-streaming-colour): (
    'hex': '#593695',
    'rgb': 'rgb(89, 54, 149)',
    'to-string': 'Streaming'
  ),
  var(--kds-offline-colour): (
    'hex': '#747f8d',
    'rgb': 'rgb(116, 127, 141)',
    'to-string': 'Offline'
  )
);

:root {
  --kds-online-colour: var(--bsi-online-color, rgb(29, 185, 84));
  --kds-dnd-colour: var(--bsi-dnd-color, rgb(255, 42, 0));
  --kds-idle-colour: var(--bsi-idle-color, rgb(250, 166, 26));
  --kds-streaming-colour: var(--bsi-streaming-color, rgb(109, 20, 158));
  --kds-offline-colour: var(--bsi-offline-color, rgb(7, 134, 130));
  --kds-invisible-colour: var(--bsi-invisible-color, rgb(66, 65, 65));
}

@each $new-colour, $inner-map in $status-mapping {
  // Status picker and DMs
  .status-1AY8sU[style*='#{get($inner-map, 'rgb')}'] {
    background-color: $new-colour !important;
  }

  // Regular and typing
  .pointerEvents-2zdfdO[fill*='#{get($inner-map, 'hex')}'] {
    fill: $new-colour;
  }
}

// Thanks to LuckFire for their original snippet + idea
// for DM status indicators!
.status-1XNdyw {
  &::after {
    font-weight: bold;
    text-transform: uppercase;
    padding-left: 8px;
    content: attr(aria-label);
  }

  @each $inner-map in values($status-mapping) {
    $aria-label-name: get($inner-map, 'to-string');

    &[aria-label='#{$aria-label-name}'] {
      &::after {
        @if $aria-label-name == 'Do Not Disturb' {
          color: var(--kds-dnd-colour);
        } @else {
          $colour-lower: str.to-lower-case($aria-label-name);
          color: var(--kds-#{$colour-lower}-colour);
        }
      }
    }
  }
}